name: test-wasta-offline-setup # you probably want to 'snapcraft register <name>'
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Set up a Wasta-Offline 'local cache repository' # 79 char long summary
description: |
  Set up a Wasta-Offline 'local cache repository'

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots
architectures:
  - amd64

apps:
  test-wasta-offline-setup:
    command: desktop-launch $SNAP/bin/wasta-offline-setup
    plugs:
      - desktop
      - home
      - removable-media

# TODO:
#   - need access to read from cache at [/var/lib/snapd/hostfs]/var/cache/apt/archives
#     https://forum.snapcraft.io/t/classic-confinement-request-for-hashit/3568/4
#   - create patch file to add check for $SNAP in 'env' or 'printenv'

parts:
#  add-ppa:
#    plugin: nil
#    override-build: |
#      apt-get update
#      apt-get install software-properties-common --yes
#      add-apt-repository --yes ppa:wasta-linux/wasta-apps
      
  wasta-offline-setup:
    after: [desktop-gtk3]
#    after: [add-ppa, zenity]
#    plugin: nil
#    organize:
#      usr/bin/zenity: zenity    # get real zenity out of PATH
    plugin: dump
    source: snap/scripts
    organize:
      zenity: bin/zenity
      wasta-offline-setup: bin/wasta-offline-setup
    prime:
      - bin/zenity
      - bin/wasta-offline-setup
    build-attributes:
      - no-system-libraries
    stage-packages:
#      - wasta-offline-setup
      - libdb5.3                # otherwise pulled from host
      - lsb-release
      - rename
      - rsync
      - dpkg-dev
      - libgdk-pixbuf2.0-0      # yad
      - libgtk-3-0              # yad
      - libnotify4              # yad
      - yad
#    prime:
#      - -usr/bin/gdialog
#      - -usr/bin/zenity
#      - -usr/share/doc/zenity*
#      - -usr/share/help/*/zenity
#      - -usr/share/man/man1/zenity*
#      - -usr/share/zenity


#  dpkg-dev:
#    plugin: nil
# Make available manually (right now it's helpfully moved by snapcraft):
# usr/lib/x86_64-linux-gnu/libdb-5.3.so
#    organize:
#      usr/bin/dpkg-scanpackages: bin/dpkg-scanpackages
#    stage-packages:
#      - dpkg-dev
  
#  rename:
#    plugin: nil
#    organize:
#      usr/bin/rename: bin/rename
#    stage-packages:
#      - rename
  
#  rsync:
#    plugin: nil
# Make available manually:
# usr/lib/x86_64-linux-gnu/libgtk-3.so.0
#    organize:
#      usr/bin/rsync: bin/rsync
#    stage-packages:
#      - rsync

# Substituting yad for zenity, courtesy of @galgalesh.
# https://forum.snapcraft.io/t/winesnap-creating-snaps-for-windows-applications/6392
#  zenity:
#    after: [desktop-gtk3]
#    plugin: dump
#    source: snap/scripts
#    organize:
#      zenity: bin/zenity
#    prime:
#      - bin/zenity
#    build-attributes:
#      - no-system-libraries

      
# ===========================================================================
#  zenity:
    # This magic courtesy of a snapcraft post by oSoMoN at
    # https://forum.snapcraft.io/t/zenity-dialogs-in-a-snap/6359
    # It only works when zenity is called directly; not when called from a script.
#    after: [desktop-gtk3]
#    source: https://gitlab.gnome.org/GNOME/zenity.git
#    source-tag: 3.28.1
#    plugin: autotools
#    configflags:
#      - --disable-libnotify
#      - --disable-webkitgtk
#    build-packages:
#      - gnome-pkg-tools
#      - gnome-common
#      - yelp-tools
#      - gettext
#      - libglib2.0-dev
#      - libgtk-3-dev
#    override-build: |
#      set -eux
#      patch -d . -p1 < ../../../snap/zenity-ui-snap-aware.patch
#      snapcraftctl build
# ===========================================================================

#  cleanup:
#    plugin: nil
#    after: [wasta-offline-setup]
#    override-build: |
#      rm -rf /usr/bin/gdialog
#      rm -rf /usr/bin/zenity
#      rm -rf /usr/share/doc/zenity*
#      rm -rf /usr/share/help/*/zenity
#      rm -rf /usr/share/man/man1/zenity*
#      rm -rf /usr/share/zenity
#      apt-get purge perl --yes
