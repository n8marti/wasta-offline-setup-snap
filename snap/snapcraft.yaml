name: test-wasta-offline-setup # you probably want to 'snapcraft register <name>'
version: '0.1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Set up a Wasta-Offline 'local cache repository' # 79 char long summary
description: |
  Set up a Wasta-Offline 'local cache repository'

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots
architectures:
  - amd64

apps:
  test-wasta-offline-setup:
    command: desktop-launch $SNAP/usr/bin/wasta-offline-setup
    plugs:
      - home
      - removable-media

# TODO:
#   - need lsb_release command
#   - need access to read from cache at [/var/lib/snapd/hostfs]/var/cache/apt/archives
#     https://forum.snapcraft.io/t/classic-confinement-request-for-hashit/3568/4
#   - don't seem to need rsync? or did it just use the system's version?

parts:
  add-ppa:
    plugin: nil
    override-build: |
      apt-get update
      apt-get install software-properties-common --yes
      add-apt-repository --yes ppa:wasta-linux/wasta-apps
      
  wasta-offline-setup:
    plugin: nil
    after: [add-ppa, zenity]
    stage-packages:
      - wasta-offline-setup
      # - libdb5.3 # otherwise pulled from host
      - lsb-release
      - rename
      - rsync
      - dpkg-dev
    override-build: |
      apt-get purge zenity --yes
      apt-get purge perl --yes


#  dpkg-dev:
#    plugin: nil
# Make available manually (right now it's helpfully moved by snapcraft):
# usr/lib/x86_64-linux-gnu/libdb-5.3.so
#    organize:
#      usr/bin/dpkg-scanpackages: bin/dpkg-scanpackages
#    stage-packages:
#      - dpkg-dev
  
#  rename:
#    plugin: nil
#    organize:
#      usr/bin/rename: bin/rename
#    stage-packages:
#      - rename
  
#  rsync:
#    plugin: nil
# Make available manually:
# usr/lib/x86_64-linux-gnu/libgtk-3.so.0
#    organize:
#      usr/bin/rsync: bin/rsync
#    stage-packages:
#      - rsync

# Substituting yad for zenity, courtesy of @galgalesh.
# https://forum.snapcraft.io/t/winesnap-creating-snaps-for-windows-applications/6392
  zenity:
    plugin: dump
    build-attributes:
      - no-system-libraries
    after: [desktop-gtk3]
    source: snap/scripts
    organize:
      'zenity': bin/
    stage-packages:
      - libgdk-pixbuf2.0-0 # yad
      - libgtk-3-0         # yad
      - libnotify4         # yad
      - yad
      
# ===========================================================================
#  zenity:
    # This magic courtesy of a snapcraft post by oSoMoN at
    # https://forum.snapcraft.io/t/zenity-dialogs-in-a-snap/6359
    # It only works when zenity is called directly; not when called from a script.
#    after: [desktop-gtk3]
#    source: https://gitlab.gnome.org/GNOME/zenity.git
#    source-tag: 3.28.1
#    plugin: autotools
#    configflags:
#      - --disable-libnotify
#      - --disable-webkitgtk
#    build-packages:
#      - gnome-pkg-tools
#      - gnome-common
#      - yelp-tools
#      - gettext
#      - libglib2.0-dev
#      - libgtk-3-dev
#    override-build: |
#      set -eux
#      patch -d . -p1 < ../../../snap/zenity-ui-snap-aware.patch
#      snapcraftctl build
# ===========================================================================
